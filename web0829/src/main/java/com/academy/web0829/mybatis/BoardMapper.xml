<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Board">
	<!--  앞으로 쿼리문은 java 클래스안에 두지 말고, mybatis의 xml에 작성하자!
			지금까지 DAO에 작성했던 상투적이고 거창했던 JDBC코드를 사용하는 것이 아니라
			개발자가 쿼리문에 집중할 수 있고, 유지보수성을 올리기 위해 SQL Mapper 중 하나인
			Mybatis 프레임워크를 이용하다..(Hibernate 와 mybatis와 약간의 차이가 있음)
			SQLMapper -> 사용하는 Mapper = Mybatis
			Hibernate = object+read? or mapper(쿼리문없음)
	 -->
	 <insert id="insert" parameterType="Board">
	 	insert into board(title, writer, content) values(#{title}, #{writer}, #{content})
	 </insert>
	 <!-- 모두가져오기 -->
	 <select id="selectAll" resultType="Board">
	 	select board_id, title, writer, content, regdate, hit from board order by board_id desc
	 </select>
	 <!-- 한건 가져오기 -->
	 <select id="select" resultType="Board" parameterType="int">
	 	select board_id, title, writer, content, regdate, hit from board where board_id=#{board_id}		
	 </select>
	 <!-- 삭제 -->
	 <delete id="delete" parameterType="int">
	 	delete from board where board_id=#{board_id} 
	 </delete>
	 <!-- 수정 -->
	 <update id="update" parameterType="Board">
	 	update board set title=#{title} , writer=#{writer} , content=#{content} where board_id=#{board_id} 
	 </update>
</mapper>