// error : java 문법에 맞지 않아서, 기계어로 번역이 불가능한 상태 - 프로그램이 완성되지 못함 -> 개발자 잘못

// warning : 지저분한 소스, 프로그램이 완성됨, 정리는 해주는게 좋음 -> 개발자 잘못

// exception : 프로그램에는 문제가 없음, 실행할 때 외부적인 요인에 의해 정상실행이 안되는 상황
//			  -> 개발자 잘못x

// 개발을 할때 - 한국어로 생각 -> 번역(개발) -> 자바 -> 번역(컴파일) -> 기계어(.class) -> 실행


개발을 할때 - 한국어로 생각 -> 번역(개발) -> 자바 
	    -> 번역(컴파일) -> 기계어(.class) -> 실행

/*	try {
	위험한 구문
	} catch (Exception 이름 변수명) {
	// TODO: handle exception
	} finally {
	System.out.println("오류에 상관없이 실행되는 finally");
	exception 발생여부와 상관없이 무조건 실행, return 보다 먼저 실행
	} 
// 그러면 왜 finally를 써야되는건지? 메인에서는 상관없는데
// 클래스들은 리턴을 해줘야되니까 써줘야됨
*/

catch(Exception이름 변수명) {
	Exception이 발생하면 여기가 실행 };

catch (Exception e) :  다형성을 이용함 // 걍 이것만 쓰면될듯?

만약에 각각의 에러에 따라 다른 문구를 넣어주고 싶으면 exception을 사용하지말고
catch를 늘려서 따로따로 처리해야됨

문자열 클래스 사용
http://www.tcpschool.com/java/java_api_string
정리된거 보는게 좋을듯?






I/O 입력,출력 ---------->	java
	     <----------

// 기본형
// inputStream : 장치 -> java 프로그램으로 데이터를 가져올 때 사용하는 빨대 (1번 보낼때 1byte씩만 자바로 받음)
// inputStreamReader : 장치 -> 프로그램 (2byte)
//bufferedReader : 장치 -> 프로그램 (??? 1string -> 1line)


// outputStream : java 프로그램 -> 장치로 데이터를 보낼때 사용하는 빨대 (1byte씩 자바에서 밖으로 빼낸다)
// outputStreamWriter : 프로그램 -> 장치 (2byte)
// outputStreamWriter : 프로그램 -> 장치 (1String -> 1line)

// 개조형
// fileReader : 파일에서 데이터 읽기 편하게 inputStreamReader를 개조(2byte)
// fileWriter : 

<BufferedWriter>

FileWriter fw = new FileWriter("C:\\javatest\\test.txt"); // 
\\개 안해주고 /하나 해줘도 처리는 됨 다만 리눅스에 맞춰서 \\함

FileOutputStream fos = new FileOutputStream("C:\\javatest\\Jul28.txt", true);
// 더 낮은 단계로 입력 true를 붙이면 저장할때마다 기존데이터와 신규데이터가 생성
// 인코딩 방식 지정 (utf-8로 설정해야될때 사용하면될듯)
OutputStreamWriter osw = new OutputStreamWriter(fos, "utf-8"); 
BufferedWriter bw =new BufferedWriter(osw);


<BuffredReader>
FileInputStream fis = new FileInputStream("C:\\javatest\\Jul28.txt");
InputStreamReader isr = new InputStreamReader(fis, "utf-8");
BufferedReader br = new BufferedReader(isr);

windows -> preferences -> General -> Workspace -> Default(MS949) 설정? 해야되는듯
했을때 버퍼리더 했으면 UTF-8이 아닌 ANSI로 떠야되는듯?

flush() : stream을 닫지 않아도 데이터 전송

close() : stream을 다 쓰고 나서 닫고 싶을때 사용
	---flush()가 내포되어있음---
// 한번 닫으면 다시 못열어여

<NETWORK>
String addr ="https://www.naver.com/";
try {
URL u =new URL(addr);
HttpsURLConnection huc = (HttpsURLConnection) u.openConnection();
InputStream is = huc.getInputStream();
InputStreamReader isr = new InputStreamReader(is, "utf-8"); // utf-8안붙이면 한글깨짐
BufferedReader br = new BufferedReader(isr);
String line = null;
while ((line =br.readLine()) != null) {
	System.out.println(line);
	}
